<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Rohan Pande</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2017-04-26T17:36:27+05:30</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Rohan Pande</name>
   <email></email>
 </author>

 
 <entry>
   <title>Change of theme</title>
   <link href="http://localhost:4000/one/two/2017/04/26/change-of-them.html"/>
   <updated>2017-04-26T10:51:47+05:30</updated>
   <id>http://localhost:4000/one/two/2017/04/26/change-of-them</id>
   <content type="html">&lt;hr/&gt;

&lt;p&gt;Today I decided to change jekyll theme as I was not satisfied with earlier one. I came across this nice theme which supported all my requirements. so kudos to developer.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Learning docker !!!</title>
   <link href="http://localhost:4000/one/two/2017/02/22/learning-docker.html"/>
   <updated>2017-02-22T14:12:47+05:30</updated>
   <id>http://localhost:4000/one/two/2017/02/22/learning-docker</id>
   <content type="html">&lt;p&gt;&lt;hr&gt;&lt;/p&gt;

&lt;h3&gt;To run docker&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run docker/whalesay cowsay boo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To see Docker images on system&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker images&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Writing a Docker File&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A Dockerfile is a recipe which describes the files, environment, and commands that make up an image.&lt;/li&gt;
&lt;li&gt;create a new directory mkdir mydockerbuild&lt;/li&gt;
&lt;li&gt;cd mydockerbuild
** Edit a new text file named Dockerfile&lt;/li&gt;
&lt;li&gt;nano Dockerfile
** Add a FROM statement by copying the following line into the file&lt;/li&gt;
&lt;li&gt;FROM docker/whalesay:latest
-- the FROM keyword tells Docker which image your image is based on.
** Add a RUN statement which will install the fortunes program into the image&lt;/li&gt;
&lt;li&gt;RUN apt-get -y update &amp;amp;&amp;amp; apt-get install -y fortunes
** Add a CMD statement which tells the iamge the final command to run afters its environment is setup this command runs fortune -a and sends its output to the cowsay command.&lt;/li&gt;
&lt;li&gt;CMD /usr/games/fortune -a | cowsay
** Check your work. Your file should look just like this
FROM docker/whalesay:latest
RUN apt-get -y update &amp;amp;&amp;amp; apt-get install -y fortunes
CMD /usr/games/fortune -a | cowsay&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Build an image from your docker file&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker build -t docker-whale .&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Run your new docker-whale&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker images [ this will provide list of all images at local ]&lt;/li&gt;
&lt;li&gt;docker run docker-whale&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Tag and push the image&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker images [ this will provide list of all images available ]&lt;/li&gt;
&lt;li&gt;Find the image ID for the image to be tagged and pushed&lt;/li&gt;
&lt;li&gt;docker tag image ID justrohu/image-name:version&lt;/li&gt;
&lt;li&gt;docker images [ run again to ensure image has been tagged ]&lt;/li&gt;
&lt;li&gt;docker login [to login into docker.hub.com account ]&lt;/li&gt;
&lt;li&gt;docker push justrohu/image-name&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Remove Docker Image&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker image remove [ you can refer to an image by its ID or its name ]&lt;/li&gt;
&lt;li&gt;docker image remove image ID&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Pull your new image&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker images&lt;/li&gt;
&lt;li&gt;remove duplicate images by docker image remove image ID&lt;/li&gt;
&lt;li&gt;docker run docker/whalesay&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To View List of All Containers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker ps -a&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To view list of Latest created containers including non-running containers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker ps -l&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To List the networks on docker&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker network ls&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To Launch docker into the network by default it will launch in bridge network unless customized otherwise&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -itd --name=networktest ubuntu&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;inspecting the bridge is the easiest way to find containers ip address&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker network inspect bridge&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To disconnect the container from a network&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker network disconnect bridge networktest&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To create your own bridge network&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker network create -d bridge my-bridge-network&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To add containers to a network&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d --net=my-bridge-network --name db training/postgres&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To inspect bridge&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker inspect --format=&amp;#39;&amp;#39; db&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To add container to network without specifying network&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d --name web training/webapp python app.py&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To get the ip address on which container is deployed&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker inspect --format=&amp;#39;&amp;#39;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To open a shell to running container&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker exec -it db bash&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To attach a container to other network&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker network connect my-bridge-network web&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;hr&gt;&lt;/p&gt;

&lt;h2&gt;Data Volumes&lt;/h2&gt;

&lt;h3&gt;Adding a data volumn&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d -P --name web -v /webapp training/webapp python app.py&lt;/li&gt;
&lt;li&gt;you can also use the VOLUME instruction in a Dockerfile to add one or more new volumes to any container created from that image.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Location a volumn&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker inspect web [ container name ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Mount a host directory as a data volume&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d -P --name web -v /src/webapp:/webapp training/webapp python app.py&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Mount a host directory as data volume with read only&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d -P --name web -v /src/webapp:/webapp:ro training/webapp python app.py&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Mount a host file as a data volumeÂ¶&lt;/h3&gt;

&lt;p&gt;** The -v flag can also be used to mount a single file - instead of just directories - from the host machine.
 - docker run --rm -it -v ~/.bash&lt;em&gt;histroy:/root/.bash&lt;/em&gt;histroy ubuntu /bin/bash&lt;/p&gt;

&lt;h3&gt;Creating and mounting a data volume container&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker create -v /dbdata --name dbstore training/postgres /bin/true&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To mount the /dbdata volume in another container by using --volumes-from flag&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d --volumes-from dbstore --name db1 training/postgres&lt;/li&gt;
&lt;li&gt;docker run -d --volumes-from dbstore --name db2 training/postgres&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To extend chain by mounting the volume that came from the dbstore&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -d --name db3 --volumes-from db1 training/postgres&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Backup, restore or migrate data volumes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run --rm --volumes-from dbstore -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To remove volumes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run --rm -v /foot -v awesome:/bar busybox top&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To delete containers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker rm -f &lt;container&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Delete all available containers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker rm -f $(docker ps -aq)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;To expose default ports&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -tid -P  --name apache_server nimmis/apache-php5&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Specify a different post &lt;host port&gt;:&lt;container port&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -tid -p 80:80 --name apache_server  nimmis/apache-php5&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Example&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker run -tid -p 80:80 --name=&amp;quot;apache_server&amp;quot; -v /Users/admin/Desktop/www/TEST:/var/www nimmis/apache-php5&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dockerfile example&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;&lt;/span&gt; FROM justrohu/apache-php5
 MAINTAINER justrohu &amp;lt;justrohu@gmail.com&amp;gt;
 COPY &lt;span class=&quot;m&quot;&gt;000&lt;/span&gt;-default.conf /etc/apache2/sites-available/000-default.conf  
 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; overridding container httpd.conf with host conf &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

 EXPOSE &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# exposing http port&lt;/span&gt;
 EXPOSE &lt;span class=&quot;m&quot;&gt;443&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# exposing https port&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# CMD [&amp;quot;executable&amp;quot;,&amp;quot;param1&amp;quot;,&amp;quot;param2&amp;quot;] { syntax on command writting }&lt;/span&gt;

 CMD &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/sbin/apache2ctl&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;-D&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;FOREGROUND&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

 RUN apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;apt-get install nodejs &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;apt-get install npm

 ENV &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
 ENV &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;To Stop a running container&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;docker stop &lt;container name&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Configure DWA131 wireless N300</title>
   <link href="http://localhost:4000/one/two/2017/01/25/configure-dwa131-wireless-n300-nano-usb-adapter-on-raspbian-jessie.html"/>
   <updated>2017-01-25T10:51:47+05:30</updated>
   <id>http://localhost:4000/one/two/2017/01/25/configure-dwa131-wireless-n300-nano-usb-adapter-on-raspbian-jessie</id>
   <content type="html">&lt;hr/&gt;

&lt;p&gt;Today I have to shift network connection of my raspberry pi 2 from wired to wifi. I did foresee this and did purchased a wifi dongle âDWA131 Wireless N300 Nano USB Adapterâ from a technological fair at my home town. When I connected this dongle to my raspberry pi. It was disappointing to see that this dongle is not supported out of the box for raspbian jessie. so I tried it with âKodiâ which to my surprise supported this dongle out of the box.&lt;/p&gt;

&lt;p&gt;So during this weekend I decided I should fix this issue. I googled for solutions and found &amp;amp; tried many but none of them worked for me. then I looked up in detail and found out that most of the solutions were for DWA131 Wireless N150 Nano USB Adapter.&lt;/p&gt;

&lt;p&gt;So this is what I did to fix my issue.&lt;/p&gt;

&lt;p&gt;First I got the kernal and build number of âRaspbian Jessieâ by doing&lt;/p&gt;

&lt;p&gt;uname -a&lt;/p&gt;

&lt;p&gt;output:&lt;/p&gt;

&lt;p&gt;Linux rohan-pi 4.1.13-v7 + #826 SMP PREEMPT Fri Nov 13 20:19:03 GMT 2015 armv7l GNU/Linux&lt;/p&gt;

&lt;p&gt;Kernal : 4.1.13-v7&lt;/p&gt;

&lt;p&gt;Build : 826&lt;/p&gt;

&lt;p&gt;Getting the right driver for dongle&lt;/p&gt;

&lt;p&gt;wget https://dl.dropboxusercontent.com/u/80256631/8192eu -[ kernel ]-[ build ].tar.gz
so my wget would look like this&lt;/p&gt;

&lt;p&gt;wget https://dl.dropboxusercontent.com/u/80256631/8192eu-4.1.13-v7-826.tar.gz&lt;/p&gt;

&lt;p&gt;extracting downloaded driver&lt;/p&gt;

&lt;p&gt;tar xzf 8192eu-4.1.13-v7-826.tar.gz
The last step is to run install.sh from the extracted folder.&lt;/p&gt;

&lt;p&gt;please setup your wifi network configuration &amp;amp; remove the wired connection and reboot the system.&lt;/p&gt;

&lt;p&gt;this is my wifi config setup&lt;/p&gt;

&lt;p&gt;interface setting&lt;/p&gt;

&lt;p&gt;path: /etc/network/interfaces&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;##### interfaces(5) file used by ifup(8) and ifdown(8)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##### Please note that this file is written to be used with dhcpcd&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##### For static IP, consult /etc/dhcpcd.conf and âman dhcpcd.confâ&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;##### Include files from /etc/network/interfaces.d:&lt;/span&gt;

source-directory /etc/network/interfaces.d

auto lo
iface lo inet loopback
iface eth0 inet manual
auto wlan0
allow-hotplug wlan0
iface wlan0 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
allow-hotplug wlan1
iface wlan1 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
wpa_supplicant.conf file contents :

/etc/wpa_supplicant/wpa_suppplicant.conf
&lt;span class=&quot;nv&quot;&gt;ctrl_interface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run/wpa_supplicant &lt;span class=&quot;nv&quot;&gt;GROUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;netdev
&lt;span class=&quot;nv&quot;&gt;update_config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;âYOUR-NETWORK-SSIDâ
&lt;span class=&quot;nv&quot;&gt;key_mgmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
&lt;span class=&quot;nv&quot;&gt;psk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;âYOUR-NETWORK-PASSWORDâ
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>My first blog</title>
   <link href="http://localhost:4000/one/two/2017/01/24/my-first-blog.html"/>
   <updated>2017-01-24T10:51:47+05:30</updated>
   <id>http://localhost:4000/one/two/2017/01/24/my-first-blog</id>
   <content type="html">&lt;hr/&gt;

&lt;p&gt;Welcome to my first blog, Thank you for taking time to read this.
At first, I was reluctant to do blogging then I thought writting makes me feel relaxed so here it is.&lt;/p&gt;

&lt;p&gt;I started to write this blog but kept starting at my screen for 30 mins and over. with all the thoughts which are rushing in my brain I am trying to give a go to what comes to my mind and started to type this.&lt;/p&gt;

&lt;p&gt;I am software developer by profession, It&amp;#39;s been 4 or more years in this industry but I am rocking it, I work for Sanisoft Technologies. I love my job.&lt;/p&gt;

&lt;p&gt;So guys this is my first post. more and more to come.&lt;/p&gt;

&lt;p&gt;Thank you&lt;/p&gt;
</content>
 </entry>
 

</feed>
